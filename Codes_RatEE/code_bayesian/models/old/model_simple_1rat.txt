model{
	    for (h in 1:nH) {
					noise_k[h] ~ dexp(0.01);
					noise_lambda[h] ~ dexp(10);
					noise[h] <- noise_k[h]/noise_lambda[h];
		    	thres_mu[h] ~ dnorm(0,0.01);
					thres_sigma[h] ~ dexp(0.01);
	        tnoise[h] ~ dgamma(noise_k[h], noise_lambda[h]);
					tthres[h] ~ dnorm(thres_mu[h], 1/thres_sigma[h]);
			}
        for (t in 1:nG) {
						dQ[t] <- r[t] - tthres[h[t]];
						P[t]  <- 1 - 1/(1 + exp(-dQ[t]/tnoise[h[t]]))
						c[t] ~ dbern( P[t] );
			}

}
